# coding: utf-8

"""
    Algod REST API.

    API endpoint for algod operations.

    The version of the OpenAPI document: 0.0.1
    Contact: contact@algorand.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from algokit_utils import AlgoAmount, AlgorandClient, SigningAccount
import pytest
import os
import os.path

from algokit_algod_api.configuration import Configuration
from algokit_algod_api.api_client import ApiClient


@pytest.fixture
def base_configuration():
    """Fixture to create a base configuration for tests."""
    # Default values for local Algorand node
    host = os.environ.get("ALGORAND_HOST", "http://localhost:4001")
    configuration = Configuration(
        host=host,
        api_key = {
            'api_key': os.environ.get("ALGORAND_API_TOKEN", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
        }
    )

    return configuration

@pytest.fixture
def api_client_fixture(base_configuration):
    """Fixture to create a configured API client."""
    client = ApiClient(configuration=base_configuration)
    yield client
    # No cleanup needed for non-async client


@pytest.fixture
def algorand() -> AlgorandClient:
    return AlgorandClient.default_localnet()


@pytest.fixture
def bob(algorand: AlgorandClient) -> SigningAccount:
    new_account = algorand.account.random()
    dispenser = algorand.account.localnet_dispenser()
    algorand.account.ensure_funded(
        new_account, dispenser, AlgoAmount.from_algo(100), min_funding_increment=AlgoAmount.from_algo(1)
    )
    algorand.set_signer(sender=new_account.address, signer=new_account.signer)
    return new_account

@pytest.fixture
def alice(algorand: AlgorandClient) -> SigningAccount:
    new_account = algorand.account.random()
    dispenser = algorand.account.localnet_dispenser()
    algorand.account.ensure_funded(
        new_account, dispenser, AlgoAmount.from_algo(100), min_funding_increment=AlgoAmount.from_algo(1)
    )
    return new_account
