/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SimulationOpcodeTraceUnit } from '../models/SimulationOpcodeTraceUnit';
import { HttpFile } from '../http/http';

/**
* The execution trace of calling an app or a logic sig, containing the inner app call trace in a recursive way.
*/
export class SimulationTransactionExecTrace {
    /**
    * Program trace that contains a trace of opcode effects in an approval program.
    */
    'approvalProgramTrace'?: Array<SimulationOpcodeTraceUnit>;
    /**
    * SHA512_256 hash digest of the approval program executed in transaction.
    */
    'approvalProgramHash'?: string;
    /**
    * Program trace that contains a trace of opcode effects in a clear state program.
    */
    'clearStateProgramTrace'?: Array<SimulationOpcodeTraceUnit>;
    /**
    * SHA512_256 hash digest of the clear state program executed in transaction.
    */
    'clearStateProgramHash'?: string;
    /**
    * If true, indicates that the clear state program failed and any persistent state changes it produced should be reverted once the program exits.
    */
    'clearStateRollback'?: boolean;
    /**
    * The error message explaining why the clear state program failed. This field will only be populated if clear-state-rollback is true and the failure was due to an execution error.
    */
    'clearStateRollbackError'?: string;
    /**
    * Program trace that contains a trace of opcode effects in a logic sig.
    */
    'logicSigTrace'?: Array<SimulationOpcodeTraceUnit>;
    /**
    * SHA512_256 hash digest of the logic sig executed in transaction.
    */
    'logicSigHash'?: string;
    /**
    * An array of SimulationTransactionExecTrace representing the execution trace of any inner transactions executed.
    */
    'innerTrace'?: Array<SimulationTransactionExecTrace>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "approvalProgramTrace",
            "baseName": "approval-program-trace",
            "type": "Array<SimulationOpcodeTraceUnit>",
            "format": ""
        },
        {
            "name": "approvalProgramHash",
            "baseName": "approval-program-hash",
            "type": "string",
            "format": "byte"
        },
        {
            "name": "clearStateProgramTrace",
            "baseName": "clear-state-program-trace",
            "type": "Array<SimulationOpcodeTraceUnit>",
            "format": ""
        },
        {
            "name": "clearStateProgramHash",
            "baseName": "clear-state-program-hash",
            "type": "string",
            "format": "byte"
        },
        {
            "name": "clearStateRollback",
            "baseName": "clear-state-rollback",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "clearStateRollbackError",
            "baseName": "clear-state-rollback-error",
            "type": "string",
            "format": ""
        },
        {
            "name": "logicSigTrace",
            "baseName": "logic-sig-trace",
            "type": "Array<SimulationOpcodeTraceUnit>",
            "format": ""
        },
        {
            "name": "logicSigHash",
            "baseName": "logic-sig-hash",
            "type": "string",
            "format": "byte"
        },
        {
            "name": "innerTrace",
            "baseName": "inner-trace",
            "type": "Array<SimulationTransactionExecTrace>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SimulationTransactionExecTrace.attributeTypeMap;
    }

    public constructor() {
    }
}
