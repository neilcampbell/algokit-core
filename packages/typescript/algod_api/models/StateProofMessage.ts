/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Represents the message that the state proofs are attesting to.
*/
export class StateProofMessage {
    /**
    * The vector commitment root on all light block headers within a state proof interval.
    */
    'blockHeadersCommitment': string;
    /**
    * The vector commitment root of the top N accounts to sign the next StateProof.
    */
    'votersCommitment': string;
    /**
    * An integer value representing the natural log of the proven weight with 16 bits of precision. This value would be used to verify the next state proof.
    */
    'lnProvenWeight': number;
    /**
    * The first round the message attests to.
    */
    'firstAttestedRound': number;
    /**
    * The last round the message attests to.
    */
    'lastAttestedRound': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "blockHeadersCommitment",
            "baseName": "BlockHeadersCommitment",
            "type": "string",
            "format": "byte"
        },
        {
            "name": "votersCommitment",
            "baseName": "VotersCommitment",
            "type": "string",
            "format": "byte"
        },
        {
            "name": "lnProvenWeight",
            "baseName": "LnProvenWeight",
            "type": "number",
            "format": ""
        },
        {
            "name": "firstAttestedRound",
            "baseName": "FirstAttestedRound",
            "type": "number",
            "format": ""
        },
        {
            "name": "lastAttestedRound",
            "baseName": "LastAttestedRound",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StateProofMessage.attributeTypeMap;
    }

    public constructor() {
    }
}
