/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SimulateRequestTransactionGroup } from '../models/SimulateRequestTransactionGroup';
import { SimulateTraceConfig } from '../models/SimulateTraceConfig';
import { HttpFile } from '../http/http';

/**
* Request type for simulation endpoint.
*/
export class SimulateRequest {
    /**
    * The transaction groups to simulate.
    */
    'txnGroups': Array<SimulateRequestTransactionGroup>;
    /**
    * If provided, specifies the round preceding the simulation. State changes through this round will be used to run this simulation. Usually only the 4 most recent rounds will be available (controlled by the node config value MaxAcctLookback). If not specified, defaults to the latest available round.
    */
    'round'?: number;
    /**
    * Allows transactions without signatures to be simulated as if they had correct signatures.
    */
    'allowEmptySignatures'?: boolean;
    /**
    * Lifts limits on log opcode usage during simulation.
    */
    'allowMoreLogging'?: boolean;
    /**
    * Allows access to unnamed resources during simulation.
    */
    'allowUnnamedResources'?: boolean;
    /**
    * Applies extra opcode budget during simulation for each transaction group.
    */
    'extraOpcodeBudget'?: number;
    'execTraceConfig'?: SimulateTraceConfig;
    /**
    * If true, signers for transactions that are missing signatures will be fixed during evaluation.
    */
    'fixSigners'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "txnGroups",
            "baseName": "txn-groups",
            "type": "Array<SimulateRequestTransactionGroup>",
            "format": ""
        },
        {
            "name": "round",
            "baseName": "round",
            "type": "number",
            "format": ""
        },
        {
            "name": "allowEmptySignatures",
            "baseName": "allow-empty-signatures",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "allowMoreLogging",
            "baseName": "allow-more-logging",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "allowUnnamedResources",
            "baseName": "allow-unnamed-resources",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "extraOpcodeBudget",
            "baseName": "extra-opcode-budget",
            "type": "number",
            "format": ""
        },
        {
            "name": "execTraceConfig",
            "baseName": "exec-trace-config",
            "type": "SimulateTraceConfig",
            "format": ""
        },
        {
            "name": "fixSigners",
            "baseName": "fix-signers",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SimulateRequest.attributeTypeMap;
    }

    public constructor() {
    }
}
