name: TypeScript API Client CI/CD

on:
  workflow_call:
    inputs:
      api:
        required: true
        type: string
        description: "The name of the api client to build and publish"
      release:
        required: false
        type: boolean
        default: false
        description: "Whether to run release steps"
    secrets:
      BOT_ID:
        required: true
      BOT_SK:
        required: true
      NPM_TOKEN:
        required: true

permissions:
  contents: write # to make commits
  actions: write # to upload artifacts
  issues: write # to be able to comment on released issues
  pull-requests: write # to be able to comment on released pull requests
  packages: write # to be able to publish packages

env:
  PACKAGE_DIR: packages/typescript/${{ inputs.api }}

jobs:
  build_test_release:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        if: inputs.release
        id: app_token
        with:
          app-id: ${{ secrets.BOT_ID }}
          private-key: ${{ secrets.BOT_SK }}
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.85.0

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - run: bun install --frozen-lockfile

      - name: Generate client
        working-directory: api
        run: |
          bun install --frozen-lockfile
          bun run generate:${{ inputs.api }}:ts
      - name: Check generated clients have been reviewed
        shell: bash
        run: |
          # Add untracked files as empty so they come up in diff
          git add -N ${{ env.PACKAGE_DIR }}
          # Look for changes in generated templates and error if there are any
          git diff --exit-code --minimal ${{ env.PACKAGE_DIR }}

      - name: Build TypeScript algokit_transact
        run: bun build:algokit_transact:ts

      - name: Build
        working-directory: ${{ env.PACKAGE_DIR }}
        run: |
          bun install --frozen-lockfile
          bun run build

      - name: Install AlgoKit
        run: pipx install algokit
      - name: Start localnet
        run: algokit localnet start
      - name: Test
        working-directory: ${{ env.PACKAGE_DIR }}
        run: bun run test

      - name: Release
        if: inputs.release
        working-directory: ${{ env.PACKAGE_DIR }}
        env:
          GITHUB_TOKEN: ${{ steps.app_token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: bun semantic-release
